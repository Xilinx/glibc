GCC trunk now has multiple internal headers directories, one
containing the self-contained GCC-provided headers and one containing
the <limits.h> (not self-contained but including libc's <limits.h> or
a fixed version thereof) and the fixed headers; more such directories
may be added in future.

When glibc uses -nostdinc, it needs to use -isystem options for all
these internal directories.  This patch teaches it about the
include-fixed directory (and is harmless with old GCC versions without
that directory).

2007-03-18  Joseph Myers  <joseph@codesourcery.com>

	* configure.in: Also pass -isystem option for GCC's include-fixed
	directory.
	* configure: Regenerate.


--- glibc-2.3.6.ori/configure.in	2008-10-22 14:55:58.000000000 +0200
+++ glibc-2.3.6/configure.in	2008-10-22 14:56:15.000000000 +0200
@@ -804,7 +804,7 @@
 # thing on a system that doesn't need fixincludes.  (Not presently a problem.)
 if test -n "$sysheaders"; then
   ccheaders=`$CC -print-file-name=include`
-  SYSINCLUDES="-nostdinc -isystem $ccheaders \
+  SYSINCLUDES="-nostdinc -isystem $ccheaders -isystem $ccheaders-fixed \
 -isystem `echo $sysheaders | sed 's/:/ -isystem /g'`"
 fi
 AC_SUBST(SYSINCLUDES)
--- glibc-2.3.6.ori/configure	2008-10-22 15:11:37.000000000 +0200
+++ glibc-2.3.6/configure	2008-10-22 15:11:54.000000000 +0200
@@ -4438,7 +4438,7 @@
 # thing on a system that doesn't need fixincludes.  (Not presently a problem.)
 if test -n "$sysheaders"; then
   ccheaders=`$CC -print-file-name=include`
-  SYSINCLUDES="-nostdinc -isystem $ccheaders \
+  SYSINCLUDES="-nostdinc -isystem $ccheaders -isystem $ccheaders-fixed \
 -isystem `echo $sysheaders | sed 's/:/ -isystem /g'`"
 fi
 
