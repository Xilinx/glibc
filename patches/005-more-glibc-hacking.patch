From 9d4675c14902bc7c4bf4d5ad2318d030bcc1d3cf Mon Sep 17 00:00:00 2001
Message-Id: <9d4675c14902bc7c4bf4d5ad2318d030bcc1d3cf.1243993843.git.john.williams@petalogix.com>
In-Reply-To: <5097d000f15d8e802743d9b66ca6ee94466d2ae8.1243993843.git.john.williams@petalogix.com>
References: <5097d000f15d8e802743d9b66ca6ee94466d2ae8.1243993843.git.john.williams@petalogix.com>
From: David DeBonis <ddeboni@xaqddeboni40.(none)>
Date: Wed, 27 May 2009 11:06:05 -0600
Subject: [PATCH 4/5] Merging petalogix modifications to glibc:

John Williams [Wed, 6 May 2009 03:59:12 +0000]

microblaze: Create kernel_stat.h file and simplify bits/stat.h file

This change is neccessary for do change in stat.h in kernel.
Below is the corresponded stat.h file from linux kernel.

/*
 * Microblaze stat structure
 *
 * Copyright (C) 2001,02,03 NEC Electronics Corporation
 * Copyright (C) 2001,02,03 Miles Bader <miles@gnu.org>
 *
 * This file is subject to the terms and conditions of the GNU General
 * Public License. See the file COPYING in the main directory of this
 * archive for more details.
 *
 * Written by Miles Bader <miles@gnu.org>
 */

struct stat {
       unsigned long   st_dev;
       unsigned long   st_ino;
       unsigned int    st_mode;
       unsigned int    st_nlink;
       unsigned int    st_uid;
       unsigned int    st_gid;
       unsigned long   st_rdev;        /* Device number, if device.  */
       unsigned long   __pad1;
       long            st_size;        /* Size of file, in bytes.  */
       int             st_blksize;     /* Optimal block size for I/O.  */
       int             __pad2;
       long            st_blocks;      /* Number 512-byte blocks allocated. */
       int             st_atime;       /* Time of last access.  */
       unsigned int    st_atime_nsec;
       int             st_mtime;       /* Time of last modification.  */
       unsigned int    st_mtime_nsec;
       int             st_ctime;       /* Time of last status change.  */
       unsigned int    st_ctime_nsec;
       unsigned int    __unused4;
       unsigned int    __unused5;
};

struct stat64 {
       unsigned long long      st_dev; /* Device.*/
       unsigned long long      st_ino; /* File serial number.*/
       unsigned int            st_mode; /* File mode.*/
       unsigned int            st_nlink; /* Link count. */
       unsigned int            st_uid; /* User ID of the file's owner. */
       unsigned int            st_gid; /* Group ID of the file's group. */
       unsigned long long      st_rdev; /* Device number, if device. */
       unsigned long long      __pad1;
       long long               st_size; /* Size of file, in bytes. */
       int                     st_blksize; /* Optimal block size for I/O. */
       int                     __pad2;
       long long               st_blocks; /* No. 512-byte blocks allocated */
       int                     st_atime; /* Time of last access.  */
       unsigned int            st_atime_nsec;
       int                     st_mtime; /* Time of last modification. */
       unsigned int            st_mtime_nsec;
       int                     st_ctime; /* Time of last status change. */
       unsigned int            st_ctime_nsec;
       unsigned int            __unused4;
       unsigned int            __unused5;
};

Signed-off-by: Michal Simek <monstr@monstr.eu>
Signed-off-by: John Williams <john.williams@petalogix.com>

John Williams [Wed, 6 May 2009 03:46:51 +0000]

microblaze: synchronize bits/fcntl.h with new kernel header

From: Michal Simek <monstr@monstr.eu>

There is possible to change all value to %08x format.
The next thing is that I found there some incopatiblities
in some values O_FSYNC, O_ASYNC, O_LARGEFILE, etc.
These changes need time for sync but I don't know if I need
them or not. I will do LTP tests and if they don't failed
I won't do that changes. But it is necessary to do them
with glibc upgrade.

Signed-off-by: Michal Simek <monstr@monstr.eu>
Signed-off-by: John Williams <john.williams@petalogix.com>

John Williams [Mon, 4 May 2009 10:16:29 +0000]

microblaze: Keep cleaning up the sys folder for Microblaze

John Williams [Mon, 4 May 2009 10:16:28 +0000]

microblaze: Keep cleaning up the sys folder for Microblaze

John Williams [Mon, 4 May 2009 10:16:28 +0000]

microblaze: No generic user.h exported from kernel headers any more (sourceware.org/bugzilla/show_bug.cgi?id=6505)
---
 sysdeps/unix/sysv/linux/microblaze/kernel_stat.h |   38 +++++++++++
 sysdeps/unix/sysv/linux/microblaze/sys/elf.h     |   26 +++++++
 sysdeps/unix/sysv/linux/microblaze/sys/user.h    |   78 +++++++++++++++++++++-
 3 files changed, 141 insertions(+), 1 deletions(-)
 create mode 100644 sysdeps/unix/sysv/linux/microblaze/kernel_stat.h
 create mode 100644 sysdeps/unix/sysv/linux/microblaze/sys/elf.h

diff --git a/sysdeps/unix/sysv/linux/microblaze/kernel_stat.h b/sysdeps/unix/sysv/linux/microblaze/kernel_stat.h
new file mode 100644
index 0000000..f67dd10
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/microblaze/kernel_stat.h
@@ -0,0 +1,38 @@
+/* Definition of `struct stat' used in the kernel..  */
+struct kernel_stat {
+	unsigned long st_dev;
+	unsigned long st_ino;
+	unsigned int st_mode;
+	unsigned int st_nlink;
+	unsigned int st_uid;
+	unsigned int st_gid;
+
+	unsigned long st_rdev;	/* Device number, if device.  */
+	unsigned long __pad1;
+/* not sure if is used anywhere */
+#define _HAVE___PAD1
+	long st_size;		/* Size of file, in bytes.  */
+	int st_blksize;		/* Optimal block size for I/O.  */
+	int __pad2;
+/* not sure if is used anywhere */
+#define _HAVE___PAD2
+	long st_blocks;		/* Number 512-byte blocks allocated. */
+	struct timespec st_atim;
+	struct timespec st_mtim;
+	struct timespec st_ctim;
+	unsigned int __unused4;
+#define _HAVE___UNUSED4
+	unsigned int __unused5;
+#define _HAVE___UNUSED5
+};
+
+#define _HAVE_STAT___PAD1
+#define _HAVE_STAT___PAD2
+
+#define _HAVE_STAT___UNUSED4
+#define _HAVE_STAT___UNUSED5
+
+#define _HAVE_STAT_NSEC
+#define _HAVE_STAT64___PAD1
+#define _HAVE_STAT64___PAD2
+#define _HAVE_STAT64_NSEC
diff --git a/sysdeps/unix/sysv/linux/microblaze/sys/elf.h b/sysdeps/unix/sysv/linux/microblaze/sys/elf.h
new file mode 100644
index 0000000..d959cdc
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/microblaze/sys/elf.h
@@ -0,0 +1,26 @@
+/* Copyright (C) 1998, 2000 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#ifndef _SYS_ELF_H
+#define _SYS_ELF_H	1
+
+#warning "This header is obsolete; use <sys/procfs.h> instead."
+
+#include <sys/procfs.h>
+
+#endif	/* _SYS_ELF_H */
diff --git a/sysdeps/unix/sysv/linux/microblaze/sys/user.h b/sysdeps/unix/sysv/linux/microblaze/sys/user.h
index c096bc3..987a694 100644
--- a/sysdeps/unix/sysv/linux/microblaze/sys/user.h
+++ b/sysdeps/unix/sysv/linux/microblaze/sys/user.h
@@ -1 +1,77 @@
-/* empty file, Xilinx */
+/* Copyright (C) 1998, 2000 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#ifndef _SYS_USER_H
+#define _SYS_USER_H	1
+
+/* The whole purpose of this file is for GDB and GDB only.  Don't read
+   too much into it.  Don't use it for anything other than GDB unless
+   you know what you are doing.  */
+
+struct user_fpregs_struct
+{
+  long int cwd;
+  long int swd;
+  long int twd;
+  long int fip;
+  long int fcs;
+  long int foo;
+  long int fos;
+  long int st_space [20];
+};
+
+struct user_regs_struct
+{
+  unsigned int gpr[32];
+  unsigned int pc;
+  unsigned int msr;
+  unsigned int ear;
+  unsigned int esr;
+  unsigned int fsr;
+  unsigned int btr;
+  unsigned int pvr[12];
+};
+
+struct user
+{
+  struct user_regs_struct	regs;
+  int				u_fpvalid;
+  struct user_fpregs_struct	i387;
+  unsigned long int		u_tsize;
+  unsigned long int		u_dsize;
+  unsigned long int		u_ssize;
+  unsigned long			start_code;
+  unsigned long			start_stack;
+  long int			signal;
+  int				reserved;
+  struct user_regs_struct*	u_ar0;
+  struct user_fpregs_struct*	u_fpstate;
+  unsigned long int		magic;
+  char				u_comm [32];
+  int				u_debugreg [8];
+};
+
+#define PAGE_SHIFT		12
+#define PAGE_SIZE		(1UL << PAGE_SHIFT)
+#define PAGE_MASK		(~(PAGE_SIZE-1))
+#define NBPG			PAGE_SIZE
+#define UPAGES			1
+#define HOST_TEXT_START_ADDR	(u.start_code)
+#define HOST_STACK_END_ADDR	(u.start_stack + u.u_ssize * NBPG)
+
+#endif	/* _SYS_USER_H */
-- 
1.5.3.8

